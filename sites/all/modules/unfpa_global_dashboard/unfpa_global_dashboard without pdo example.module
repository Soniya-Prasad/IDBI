<?php

//include_once('unfpa_global_opendata.module');

/**
 * @file
 * Code for UNFPA GLobal Dashboard.
 */

/**
 * Implements hook_menu().
 */
function unfpa_global_dashboard_menu() {
  $items = array();

  $items['data/dashboard/%'] = array(
    'page callback' => 'unfpa_global_dashboard_worldmap',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['data/adolescent-youth/%'] = array(
    'title' => 'Adolescents and Youth Dashboard',
    'page callback' => 'unfpa_global_dashboard_country_ay',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['data/fgm/%'] = array(
    'title' => 'FGM',
    'page callback' => 'unfpa_global_dashboard_country_fgm',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items['jsondata/%'] = array(
    'title' => 'Json data',
    'page callback' => 'json_data',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['home/getLineChartData'] = array(
    'title' => 'Json data of Decomposition',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
    'page callback' => 'decomposition_graph_ajax',
//    'page arguments' => array(2),
    'access arguments' => array('access content'),
  );

  return $items;
}

function decomposition_graph_ajax() {
//print_r($_POST);
  $data1 = $_POST['formData'];
  $data2 = json_decode($data1, TRUE);
//print_r($data2.' yes respond');
  $obj = new CSP();
  $datajson = $obj->get_json_data();
  $figuredata = $datajson['Figure'];
  $figuredataexp = explode(",", $datajson['Figure']['unit_NID']);
  $configunitNid5 = $figuredataexp[2]; // in place of 5
//echo $configunitNid5;
//$ind_nid = explode(",", $_POST['indicator_nid']); //array(1,2,3,4,17); //always array
  $unit_nid = explode(",", $_POST['unit_nid']); //array(1,5); //always array
  $sub_nid = explode(",", $_POST['sub_nid']); // always single value
  $timeperiod = explode(",", $_POST['timeperiod']); //array(1,71,88,113,163);
  $timeperiodtbl = explode(",", $_POST['timeperiodtbl']); //array(1,71,88,113,163);
  $Area_NID = $_POST['area_NID'];
  $resultArray = array();
  $indicator_array = array();
  $ind_name = array();
  $indicator_id = $_POST['indicator_nid'];
  print_r($indicator_id);
  db_set_active('mdg5b_unfpa5');
  $country_name = "";
  $country_name_result = db_select('ut_indicator_en', 'ut')
    ->fields('Indicator_Name')
    ->execute();
  while ($obj = $country_name_result->fetchObject()) {

    $country_name = $obj->Indicator_Name;
  }

// $ind_name = $obj->db_connect($indicator_id);
//  $ind_name = array();
//  $dbh = new PDO('mysql:host=localhost;dbname=mdg5b_unfpa5', 'root', '');
//  $in = str_repeat('?,', count($indicator_id) - 1) . '?';
//  $qry = $dbh->prepare('SELECT Indicator_NId,Indicator_Name from ut_indicator_en where Indicator_NId IN ($in)');
//  //$qry->bindParam(':ids', $indicator_id);
//  $qry->execute($indicator_id);
//  $result = $qry->fetchAll();
//  foreach ($result as $key => $value) {
//    $ind_name[] = $value['Indicator_Name'];
//  }
  print_r($country_name);
  db_set_active();
  $result = GetFigureChart($Area_NID, $ind_nid, $sub_nid, $unit_nid, $timeperiod);
//print_r($ind_name);
  $dbh = null;
}

function GetFigureChart($area_id, $ind_ids, $sg_ids, $unit_id, $tp_id) {
  $obj = new CSP();
//$this->unbindModel(array('belongsTo' => array('Ar', 'IC','SV')));
  $datajson = $obj->get_json_data();
  $indorderDetails = $datajson['datamodel_fig_chart']['ind_NID']; //1
  $indorderDetailsExp = explode(',', $indorderDetails);
  $indorder1 = $indorderDetailsExp[0]; //1
  $indorder2 = $indorderDetailsExp[1]; //17
//        $condition =  array("Data.Area_NId"=>$area_id, "Data.Indicator_NId"=>$ind_ids, "Data.Subgroup_Val_NId"=>$sg_ids, "Data.Unit_NId"=>$unit_id, "Data.TimePeriod_NId"=>$tp_id);
//
//		$data = $this->find('all', array('fields' => array('Data.Data_Value', 'Data.Indicator_NId', 'Data.Subgroup_Val_NId', 'Data.Unit_NId','Data.TimePeriod_NId','TmPeriod.TimePeriod','Ind.Indicator_Name','IF(Data.Indicator_NId='.$indorder1.',3,IF(Data.Indicator_NId='.$indorder2.',2,0)) as ordr'), 'conditions' =>$condition,'order'=>array('ordr'=>'desc', 'Data.Indicator_NId'=>'desc')));
  return $data;
}

function unfpa_global_dashboard_worldmap($dashboard_name = "", $indicator = "") {
  switch ($dashboard_name) {
    case "adolescent-youth":
      $data = unfpa_global_dashboard_ay();
      $areaList = areaList($data);
      $mapdata = prepare_all_country_indicators_values($data);
      unfpa_global_dashboard_worldmap_indicator_data($mapdata, $dashboard_name);
      return theme('unfpa_global_dashboard_adolescent_youth_data', array('areaList' => $areaList));
      break;
    case "fgm":
      $data = unfpa_global_dashboard_fgm();
      $areaList = array();
      $areaList = areaList($data);
      $mapdata = prepare_all_country_indicators_values_fgm($data);
//print_r($mapdata);
      unfpa_global_dashboard_worldmap_indicator_data($mapdata, $dashboard_name);
//      unfpa_global_dashboard_worldmap_data_fgm($mapdata, $dashboard_name);
      return theme('unfpa_global_dashboard_fgm_data', array('areaList' => $areaList));
      break;
    case "family-planning":
      $data = unfpa_global_dashboard_family_planning();
      $areaList = array();
      $areaList = areaList($data);
      unfpa_global_dashboard_worldmap_data($data, $dashboard_name);
      return theme('unfpa_global_dashboard_family_planning_data', array('areaList' => $areaList));
      break;

    case "decomposition":
      $data = unfpa_global_dashboard_decomposition1();
      $areaList = $data;
      return theme('unfpa_global_dashboard_decomposition_data1', array('areaList' => $areaList));
      break;
    default :
      break;
  }
}

function unfpa_global_dashboard_decomposition1() {
//  $country_name = "";
//  $country_code = 'NE';
//  $country_name_result = db_select('iatifinal', 'iati')
//    ->fields('iati')
//    ->condition('field_office', $country_code, '=')
//    ->execute();
//  while ($obj = $country_name_result->fetchObject()) {
//
//    $country_name = $obj->countryName;
//  }
//  return $country_name;
  $country_name = "";
  $country_code = 215;
  $country_name_result = db_select('ut_indicator_en', 'ut', array('target' => 'import'))
    ->fields('ut')
    ->execute();
  while ($obj = $country_name_result->fetchObject()) {

    $country_name = $obj->Indicator_Name;
  }
  return $country_name;
}

function unfpa_global_dashboard_decomposition() {
  $area = array();
  global $base_url;
  echo $base_url;
  $path = drupal_get_path('module', 'unfpa_global_dashboard');
  drupal_add_js($path . '/js/highcharts.js');
  drupal_add_js($path . '/js/decomposition/di.jquery-1.4.4.js');
  drupal_add_js($path . '/js/decomposition/custom.js');
  drupal_add_js($path . '/js/decomposition/MDG5B.js');
  $file_path = drupal_realpath('public://') . '/decomposition/files/graph_settings.json';

// This function is used to read the json contents of a file.
  $graph_data = file_get_contents($file_path, true);
  $graph_data = str_replace("var mainObj =", "", $graph_data);
//print_r($graph_data);
  $decomposition_graph_data = array();
  $decomposition_graph_data = json_decode($graph_data, true);
  $area = $decomposition_graph_data;
  drupal_add_js(array('graph_figure' => $area), 'setting');
  drupal_add_js(array('baseUrl' => $base_url), 'setting');
//print_r($decomposition_graph_data);
//  foreach ($decomposition_graph_data as $key=>$obj){
//    $area['grapg_container'][] = $key;
//    $area['grapg_container']['id'][] = $obj['id'];
//  }
//print_r($area);
//$areaList = areaList($decomposition_graph_data);
  try {

    $i = 0;
    $dbh = new PDO('mysql:host=localhost;dbname=mdg5b_unfpa5', 'root', '');
    foreach ($dbh->query('SELECT * from ut_area_en') as $row) {
      $area[]['Area'] = $row;

//$area[]=$area1['Area'];
// $i++;
//return $area;
//print_r($area['Area']);
    }
    $dbh = null;
  } catch (PDOException $e) {
    print "Error!: " . $e->getMessage() . "<br/>";
    die();
  }
  return $area;
//    //return 'test';
////  try{
////     db_set_active('decomposition_db');
////     $query = array();
////     $query = db_select('db_version'.'n');
////    $query->fields('n');
////    $result = $query->execute();
////    $areaList = array();
////    if(!empty($result)){
////      foreach ($result as $obj) {
////     return (print($obj));
////    }
////  }
//
////    $path = drupal_get_path('module','unfpa_global_dashboard');
////    drupal_add_js($path . '/js/highcharts.js');
////    drupal_add_js($path . '/js/MDG5B.js');
//
//
//    //}
//
//    db_set_active('default');
//    drupal_set_message(t('The queries have been made.'));
//
//    $results = db_query($sql);
//return 'Test';
}

/**
 * Implements hook_theme().
 */
function unfpa_global_dashboard_theme($data = array(), $areaList = array(), $country_name = '', $country_code = '', $path = '') {


  $path = drupal_get_path('module', 'unfpa_global_dashboard');
  return array(
    'unfpa_global_dashboard_adolescent_youth_data' => array(
      'variables' => array('areaList' => $areaList),
      'template' => 'ay-dashboard',
      'path' => $path . '/templates',
    ),
    'unfpa_global_dashboard_fgm_data' => array(
      'variables' => array('areaList' => $areaList),
      'template' => 'fgm-dashboard',
      'path' => $path . '/templates',
    ),
    'unfpa_global_dashboard_family_planning_data' => array(
      'variables' => array('areaList' => $areaList),
      'template' => 'family-planning-dashboard',
      'path' => $path . '/templates',
    ),
    'unfpa_global_dashboard_decomposition_data' => array(
      'variables' => array('areaList' => $areaList),
      'template' => 'decomposition-dashboard',
      'path' => $path . '/templates',
    ),
    'unfpa_global_dashboard_decomposition_data1' => array(
      'variables' => array('areaList' => $areaList),
      'template' => 'decomposition-dashboard1',
      'path' => $path . '/templates',
    ),
    'unfpa_global_detail_dashboard_adolsecent_youth' => array(
      'variables' => array('data' => $data, 'country_name' => $country_name, 'country_code' => $country_code, 'areaList' => $areaList),
      'template' => 'ay-dashboard-detail',
      'path' => $path . '/templates',
    ),
    'unfpa_global_detail_dashboard_fgm' => array(
      'variables' => array('country_name' => $country_name, 'country_code' => $country_code, 'areaList' => $areaList),
      'template' => 'fgm-dashboard-detail',
      'path' => $path . '/templates',
    ),
  );
}

/**
 * To get the country name.
 * @param string $cid
 *  The two digit code of country.
 *
 * @return string
 *  The country name.
 */
function unfpa_global_dashboard_get_country_name($country_code) {
  $country_name = "";
  $country_name_result = db_select('iatifinal', 'iati')
    ->fields('iati')
    ->condition('field_office', $country_code, '=')
    ->execute();
  while ($obj = $country_name_result->fetchObject()) {

    $country_name = $obj->countryName;
  }
  return $country_name;
}

function areaList($areaListdata) {
  $countries_list = array();
  foreach ($areaListdata as $three_digit_cntry_code => $dashboard_data) {
    array_push($countries_list, $three_digit_cntry_code);
  }
  $query = array();
  $query = db_select('dashboard_country_code', 'dcc');
  $query->join('iatifinal', 'iati', 'dcc.country_code = iati.field_office');
  $query->fields('dcc', array('three_digit_code', 'country_code'));
  $query->fields('iati', array('countryName'));
  $query->condition('dcc.three_digit_code', $countries_list, 'IN');
  $result = $query->execute();
  $areaList = array();
  $dashboard_country_names = array();
  if (!empty($result)) {
    foreach ($result as $obj) {
      $dashboard_country_names[$obj->country_code] = $obj->countryName;
      $areaList['areaIDNameArr'] = $dashboard_country_names;
    }
  }
  $areaList['path'] = $dashboard_country_names;
  return $areaList;
}

function unfpa_global_dashboard_worldmap_data($data, $dashboard_name) {

  $country = array();

// Fetch the two and three digit country code from database.
  $dashboard_cc = db_select('dashboard_country_code', 'dcc')
    ->fields('dcc', array('three_digit_code', 'country_code'))
    ->execute();

// Create a new array to set the two digit country code.
  $dashboard_country_code = array();

  if (!empty($dashboard_cc)) {
    while ($obj = $dashboard_cc->fetchObject()) {
      $dashboard_country_code[$obj->three_digit_code] = $obj->country_code;
    }
  }
// Replace the three digit country code with two digit country code.
  foreach ($data as $three_digit_cntry_code => $dashboard_data) {
    foreach ($dashboard_data as $dashboard_value) {
      if (!empty($dashboard_country_code[$three_digit_cntry_code])) {
        $two_digit_country_code = $dashboard_country_code[$three_digit_cntry_code];

        $map_color_code = unfpa_global_dashboard_get_ay_color_code();
        $country_color_code = unfpa_global_dashboard_ay_map_color($map_color_code, $dashboard_value);
        $color_code[$two_digit_country_code] = $country_color_code;


        $country[$two_digit_country_code]['url'] = url('data/' . $dashboard_name . '/' . $two_digit_country_code);
        $country[$two_digit_country_code]['description'] = "Value is " . $dashboard_value;
        $country[$two_digit_country_code]['color'] = ($color_code[$two_digit_country_code] != "") ? $color_code[$two_digit_country_code] : 'default';
        $country[$two_digit_country_code]['hover_color'] = '#BADA55';
        $country[$two_digit_country_code]['hide'] = "no";
        $country[$two_digit_country_code]['inactive'] = "no";
      }
    }
  }
  $path = drupal_get_path('module', 'unfpa_global_dashboard');
  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/jquery.ddslick.min.js');
  drupal_add_js(drupal_get_path('theme', 'unfpa_global') . '/templates/html5worldmap/worldmap.js');
  drupal_add_js(array('unfpa_global_data' => $country, 'dashboard_name' => $dashboard_name), 'setting');

//drupal_add_js($path . '/js/ay-dashboard.js');
  if ($dashboard_name == 'family-planning') {
    drupal_add_js($path . '/js/unfpa_global_family_planning_map.js');
  } else if ($dashboard_name == 'fgm') {
    drupal_add_js($path . '/js/unfpa_global_fgm_map.js');
  } else {
    drupal_add_js($path . '/js/unfpa_global_ay_map.js');
  }
}

function unfpa_global_dashboard_worldmap_data_fgm($map_data, $dashboard_name) {

  $country = array();

// Fetch the two and three digit country code from database.
  $dashboard_cc = db_select('dashboard_country_code', 'dcc')
    ->fields('dcc', array('three_digit_code', 'country_code'))
    ->execute();

// Create a new array to set the two digit country code.
  $dashboard_country_code = array();

  if (!empty($dashboard_cc)) {
    while ($obj = $dashboard_cc->fetchObject()) {
      $dashboard_country_code[$obj->three_digit_code] = $obj->country_code;
    }
  }
// Replace the three digit country code with two digit country code.
  foreach ($map_data as $indicator => $data) {
    foreach ($data as $three_digit_cntry_code => $dashboard_data) {
      foreach ($dashboard_data as $dashboard_value) {
        if (!empty($dashboard_country_code[$three_digit_cntry_code])) {
          $two_digit_country_code = $dashboard_country_code[$three_digit_cntry_code];

          $map_color_code = unfpa_global_dashboard_get_ay_color_code();
          $country_color_code = unfpa_global_dashboard_ay_map_color($map_color_code, $dashboard_value);
          $color_code[$two_digit_country_code] = $country_color_code;


          $country[$indicator][$two_digit_country_code]['url'] = url('data/' . $dashboard_name . '/' . $two_digit_country_code);
          $country[$indicator][$two_digit_country_code]['description'] = "Value is " . $dashboard_value;
          $country[$indicator][$two_digit_country_code]['color'] = ($color_code[$two_digit_country_code] != "") ? $color_code[$two_digit_country_code] : 'default';
          $country[$indicator][$two_digit_country_code]['hover_color'] = '#BADA55';
          $country[$indicator][$two_digit_country_code]['hide'] = "no";
          $country[$indicator][$two_digit_country_code]['inactive'] = "no";
        }
      }
    }
  }
  $path = drupal_get_path('module', 'unfpa_global_dashboard');
  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/jquery.ddslick.min.js');
  drupal_add_js(drupal_get_path('theme', 'unfpa_global') . '/templates/html5worldmap/worldmap.js');
  drupal_add_js(array('unfpa_global_data' => $country, 'dashboard_name' => $dashboard_name), 'setting');

//drupal_add_js($path . '/js/ay-dashboard.js');
  if ($dashboard_name == 'family-planning') {
    drupal_add_js($path . '/js/unfpa_global_family_planning_map.js');
  } else if ($dashboard_name == 'fgm') {
    drupal_add_js($path . '/js/unfpa_global_fgm_map.js');
  } else {
    drupal_add_js($path . '/js/unfpa_global_ay_map.js');
  }
}

/**
 * This function is used to retrieve adolescent youth json data for map.
 */
function unfpa_global_dashboard_ay() {
  $path = drupal_get_path('module', 'unfpa_global_dashboard');
  $theme_path = drupal_get_path('theme', 'unfpa_global');
  drupal_add_css($path . '/css/dashboard.css');
  drupal_add_css($path . '/css/dashboard-responsive-stylesheet.css');
  drupal_add_css($theme_path . '/plugins/skins/polaris/polaris.css');
  drupal_add_css($theme_path . '/plugins/skins/futurico/futurico.css');
  drupal_add_js($theme_path . '/plugins/skins/js/icheck.js');
  drupal_add_js($path . '/js/dashboard-custom.js');
  $file_path = drupal_realpath('public://') . '/adolscent-youth/files/config_files/data_v46/mapdatafiles/mapData.json';

// This function is used to read the json contents of a file.
  $map_data = file_get_contents($file_path, true);

// This function is used to get proper content for json decoding.
  $json_data = str_replace(array('mapdata_callback(', ')'), "", $map_data);
  $ay_data = array();
  $ay_data = json_decode($json_data, true);

  return $ay_data;
}

/**
 * This function is used to retrieve fgm json data for map.
 */
function unfpa_global_dashboard_fgm() {
  $path = drupal_get_path('module', 'unfpa_global_dashboard');
  $theme_path = drupal_get_path('theme', 'unfpa_global');
  drupal_add_css($path . '/css/dashboard.css');
  drupal_add_css($path . '/css/dashboard-responsive-stylesheet.css');
  drupal_add_css($theme_path . '/plugins/skins/polaris/polaris.css');
  drupal_add_css($theme_path . '/plugins/skins/futurico/futurico.css');
  drupal_add_js($theme_path . '/plugins/skins/js/icheck.js');
  drupal_add_js($path . '/js/dashboard-custom.js');
  $file_path = drupal_realpath('public://') . '/fgm/files/data_v1/d3_data/data/mapData.json';
  $mapdata_json = file_get_contents($file_path, true);

// This function is used to read the json contents of a file.
  $map_data = json_decode($mapdata_json, true);
  $fgm_data = array();
  foreach ($map_data as $country_data) {
    $fgm_data[$country_data['id']] = array($country_data['value']);
  }
  return $fgm_data;
}

/**
 * This function is used to retrieve family planning json data for map.
 */
function unfpa_global_dashboard_family_planning() {
  $file_path = drupal_realpath('public://') . '/family_planning/files/en/data_v36/bygroup/global.json';

// This function is used to read the json contents of a file.
  $map_data_json = file_get_contents($file_path, true);
  $map_data = array();
  $map_data = json_decode($map_data_json, true);

  $map_data = $map_data['data']['DMND_STSFD_FMLY_PLNG_MTHD_PER_F_15-49_YR']['MRD'];

  $data = array();
  if (!empty($map_data)) {
    foreach ($map_data as $country_code => $country_data) {
      $data[$country_code] = array($country_data[0]);
    }
  }

  return $data;
}

function unfpa_global_dashboard_get_ay_color_code() {

  return array(
    25 => '#FFDAB3',
    50 => '#FEBA71',
    75 => '#CD7422',
    100 => '#542D0E',
    5000 => '#311906'
  );
}

function unfpa_global_dashboard_ay_map_color($color, $percent) {
  foreach ($color as $upto_percent => $color_code) {
    if ($percent <= $upto_percent) {
      return $color_code;
    }
  }
}

/**
 * This function is used to retrieve data for map in individual country page.
 */
function unfpa_global_dashboard_country_ay($country_code = '') {


  $selAreaID = "";
  $country_name = "";
  $dashboard_cc = db_select('dashboard_country_code', 'dcc')
    ->fields('dcc', array('three_digit_code'))
    ->condition('country_code', $country_code, '=')
    ->execute();
  while ($obj = $dashboard_cc->fetchObject()) {

    $selAreaID = $obj->three_digit_code;
  }

  $country_name_result = db_select('iatifinal', 'iati')
    ->fields('iati')
    ->condition('field_office', $country_code, '=')
    ->execute();
  while ($obj = $country_name_result->fetchObject()) {

    $country_name = $obj->countryName;
  }
  $data = array(
//      'SITE_TITLE' => 'Adolescents and Youth Dashboard',
//      'IUS_CONFIG_FILE_PATH' => WWW_ROOT . 'files/config_files/',
//      'IUS_DATAOBJECTS_FILE_PATH' => WWW_ROOT . 'files/config_files/ius_data_files/',
//      'IMG_FILE_PATH' => APP_DIR . '/' . WEBROOT_DIR . '/img/',
//      'D3_MAP_PATH' => APP_DIR . '/' . WEBROOT_DIR . '/js/d3maplib/',
//      'APP_WEBROOT_JS_PATH' => APP_DIR . '/' . WEBROOT_DIR . '/js',
//'DEFAULT_AREA_ID' => 'BFA',
    'SEX_BOY' => 'Boys',
    'SEX_GIRL' => 'Girls',
    'AGE_GRP_10_14' => '10-14',
    'AGE_GRP_10_14_ID_TRM' => '10_14',
    'AGE_GRP_10_14_DSP_TRM' => 'Age 10-14',
    'AGE_GRP_15_19' => '15-19',
    'AGE_GRP_15_19_ID_TRM' => '15_19',
    'AGE_GRP_15_19_DSP_TRM' => 'Age 15-19',
    'AGE_GRP_20_24' => '20-24',
    'AGE_GRP_20_24_ID_TRM' => '20_24',
    'AGE_GRP_20_24_DSP_TRM' => 'Age 20-24',
    'GIRL_AGE_GRP_10_14' => 'girl_10_14',
    'GIRL_AGE_GRP_15_19' => 'girl_15_19',
    'GIRL_AGE_GRP_20_24' => 'girl_20_24',
    'BOY_AGE_GRP_10_14' => 'boy_10_14',
    'BOY_AGE_GRP_15_19' => 'boy_15_19',
    'BOY_AGE_GRP_20_24' => 'boy_20_24',
  );





// Get all area code data for url in ay-detail.js - var callbackURL = MAPS_API_URL + allareaLevel5 + '&getChildren=no&data=false&tp=mrd';
//$iusconfigfile = drupal_get_path('module', 'unfpa_global_dashboard') . "/data_v46/iusfiles2.xml";
  $iusconfigfile = drupal_realpath('public://') . '/adolscent-youth/files/config_files/iusfiles2.xml';
  $prepareAllareaLevelfour = [];
  $jsonFileContent = file_get_contents($iusconfigfile);
  $visConfigXmlData = simplexml_load_string($jsonFileContent);
  $visAreaListConfig = $visConfigXmlData->xpath("areas/obj");

  for ($cnt = 0; $cnt < count($visAreaListConfig); $cnt++) {
    $aDt = (string) $visAreaListConfig[$cnt];
    $aDtBrk = explode('||', $aDt);
    $aId = (string) $visAreaListConfig[$cnt]->attributes()->aoname;

    $prepareAllareaLevelfour[$aDtBrk[2]][] = $aId;
  }

  $allareaLevel5 = '';
  if (isset($prepareAllareaLevelfour[$selAreaID]) && count($prepareAllareaLevelfour[$selAreaID]) > 0)
    $allareaLevel5 = implode("{~}", $prepareAllareaLevelfour[$selAreaID]);
  else
    $allareaLevel5 = $selAreaID;

  $fileMapDataAreaIdJsonStatus = FALSE;
  $filexist = drupal_realpath('public://') . '/adolscent-youth/files/config_files/data_v46/mapdatafiles/' . $selAreaID . '.json';


  $mapDisplayData = "";
  if (file_exists($filexist)) {
    $fileMapDataAreaIdJsonStatus = TRUE;
    $mapDisplayData = file_get_contents($filexist);
    $mapDisplayData = json_decode($mapDisplayData, true);
  }
  $path = drupal_get_path('module', 'unfpa_global_dashboard');
  $theme_path = drupal_get_path('theme', 'unfpa_global');
  drupal_add_css($path . '/css/dashboard.css');
  drupal_add_css($path . '/css/dashboard-responsive-stylesheet.css');

  $file_path = drupal_realpath('public://') . '/adolscent-youth/files/config_files/data_v46/mapdatafiles/mapData.json';

// This function is used to read the json contents of a file.
  $map_data = file_get_contents($file_path, true);

// This function is used to get proper content for json decoding.
  $json_data = str_replace(array('mapdata_callback(', ')'), "", $map_data);
  $ay_data = array();
  $ay_data = json_decode($json_data, true);
  $areaList = areaList($ay_data);


  drupal_add_css($path . '/css/print.css', array('media' => 'print'));
  drupal_add_css($theme_path . '/plugins/skins/polaris/polaris.css');
  drupal_add_css($theme_path . '/plugins/skins/futurico/futurico.css');
  drupal_add_js($theme_path . '/plugins/skins/js/icheck.js');
  drupal_add_js($path . '/js/dashboard-custom.js');
  drupal_add_js(drupal_get_path('theme', 'unfpa_global') . '/templates/Highcharts-4.0.3/js/highcharts.js');
  drupal_add_js(drupal_get_path('theme', 'unfpa_global') . '/templates/Highcharts-4.0.3/js/modules/map.js');
  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/printvisualization.js');
  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/dwnldvisualization.js');
  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/jquery.blockUI.min.js');
  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/fullscreen.js');
  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/exporting.js');

  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/tablecountryvieway.js');
  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/ay-detail.js');
  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/jquery.ddslick.min.js');
  drupal_add_js(array('allareaLevel5' => $allareaLevel5, 'fileMapDataAreaIdJsonStatus' => $fileMapDataAreaIdJsonStatus, 'mapDisplayData' => $mapDisplayData), 'setting');
  drupal_add_js(array('allareaLevel5' => $allareaLevel5), 'setting');
  drupal_add_js(array('country_code' => $country_code, 'country_name' => $country_name), 'setting');

  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/export-csv.js');

  return theme('unfpa_global_detail_dashboard_adolsecent_youth', array('data' => $data, 'country_name' => $country_name, 'country_code' => $country_code, 'areaList' => $areaList));
}

/**
 * This function is used to retrieve data for map in individual country page for fgm.
 */
function unfpa_global_dashboard_country_fgm($country_code = '') {

  $path = drupal_get_path('module', 'unfpa_global_dashboard');
  $theme_path = drupal_get_path('theme', 'unfpa_global');
  drupal_add_css($path . '/css/dashboard.css');
  drupal_add_css($path . '/css/dashboard-responsive-stylesheet.css');
  drupal_add_css($theme_path . '/plugins/skins/polaris/polaris.css');
  drupal_add_css($theme_path . '/plugins/skins/futurico/futurico.css');
  drupal_add_css($path . '/css/print.css', array('media' => 'print'));
  drupal_add_js($theme_path . '/plugins/skins/js/icheck.js');
  drupal_add_js($path . '/js/dashboard-custom.js');
//  $areaListdata = unfpa_global_dashboard_fgm();
//  $areaList = array();
//  $areaList = areaList($areaListdata);
  $country_code_three_digit = "";
  $dashboard_cc = db_select('dashboard_country_code', 'dcc')
    ->fields('dcc', array('three_digit_code'))
    ->condition('country_code', $country_code, '=')
    ->execute();
  while ($obj = $dashboard_cc->fetchObject()) {

    $country_code_three_digit = $obj->three_digit_code;
  }
  $default_area_id = $country_code_three_digit;
  $maps_api_url = "http://admin.unfpaopendata.org/api/data?db=2&map=true&getChildren=yes&area=";
  $maps_from_api = 'yes';
  $SERVER_NAME = $_SERVER['SERVER_NAME'];


  $fileMapDataAreaIdJsonStatus = false;
  $filexist = drupal_realpath('public://') . '/fgm/files/data_v1/d3_data/data/' . $country_code_three_digit . '.json';

  $mapDisplayData = "";
  if (file_exists($filexist)) {
    $fileMapDataAreaIdJsonStatus = true;
    $mapDisplayData = file_get_contents($filexist);
  }

  define("DEFAULT_AREA_ID", $country_code_three_digit);

// read ius config file to get areas
  $iusconfigfile = drupal_realpath('public://') . '/fgm/files/iusfiles2.xml';
  $prepareAllareaLevelfour = [];
  $jsonFileContent = file_get_contents($iusconfigfile);
  $visConfigXmlData = simplexml_load_string($jsonFileContent);
  $visAreaListConfig = $visConfigXmlData->xpath("areas/obj");

  for ($cnt = 0; $cnt < count($visAreaListConfig); $cnt++) {
    $aDt = (string) $visAreaListConfig[$cnt];
    $aDtBrk = explode('||', $aDt);
    $aId = (string) $visAreaListConfig[$cnt]->attributes()->aoname;
// only national level areas
    if ($aDtBrk[1] == 4) {
      $prepareAllareaLevelfour[$aId] = [];
    }
    if ($aDtBrk[1] == 5) {
      if (isset($prepareAllareaLevelfour[$aDtBrk[2]]))
        $prepareAllareaLevelfour[$aDtBrk[2]][] = $aId;
    }
  }

  $allareaLevel5 = '';
  if (isset($prepareAllareaLevelfour[DEFAULT_AREA_ID]) && count($prepareAllareaLevelfour[DEFAULT_AREA_ID]) > 0)
    $allareaLevel5 = implode("{~}", $prepareAllareaLevelfour[DEFAULT_AREA_ID]);
  else
    $allareaLevel5 = DEFAULT_AREA_ID;

  $website_data_url = drupal_realpath('public://') . '/fgm/files/data_v1/';

// Data for charts
  $file_path = drupal_realpath('public://') . '/fgm/files/data_v1/' . $country_code_three_digit . '.json';

// This function is used to read the json contents of a file.
  $map_data = file_get_contents($file_path, true);

// This function is used to get proper content for json decoding.
  $json_data = str_replace("var mainObj =", "", $map_data);
  $mainObj = array();
  $mainObj = json_decode($json_data, true);
//
//  echo '<pre>';
//  print_r($mainObj);
//  echo '</pre>';

  $data = array('mapDisplayData' => $mapDisplayData, 'fileMapDataAreaIdJsonStatus' => $fileMapDataAreaIdJsonStatus, 'default_area_id' => $default_area_id, 'maps_api_url' => $maps_api_url, 'maps_from_api' => $maps_from_api, 'SERVER_NAME' => $SERVER_NAME, 'allareaLevel5' => $allareaLevel5, 'website_data_url' => $website_data_url, 'mainObj' => $mainObj);
  $country_name_result = db_select('iatifinal', 'iati')
    ->fields('iati')
    ->condition('field_office', $country_code, '=')
    ->execute();
  while ($obj = $country_name_result->fetchObject()) {

    $country_name = $obj->countryName;
  }
  drupal_add_js(array('data' => $data, 'country_name' => $country_name), 'setting');
  drupal_add_js(drupal_get_path('theme', 'unfpa_global') . '/templates/Highcharts-4.0.3/js/highcharts.js');
  drupal_add_js(drupal_get_path('theme', 'unfpa_global') . '/templates/Highcharts-4.0.3/js/modules/map.js');
  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/printvisualization.js');
  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/dwnldvisualization.js');
  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/jquery.blockUI.min.js');
  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/fullscreen.js');
  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/exporting.js');
  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/tablecountryview.js');
  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/fgm-detail.js');


  $file_path = drupal_realpath('public://') . '/fgm/files/data_v1/d3_data/data/mapData.json';
  $mapdata_json = file_get_contents($file_path, true);

// This function is used to read the json contents of a file.
  $map_data = json_decode($mapdata_json, true);
  $fgm_data = array();
  foreach ($map_data as $country_data) {
    $fgm_data[$country_data['id']] = array($country_data['value']);
  }
  $areaList = areaList($fgm_data);
  drupal_add_js(drupal_get_path('module', 'unfpa_global_dashboard') . '/js/export-csv.js');
  return theme('unfpa_global_detail_dashboard_fgm', array('data' => $data, 'country_name' => $country_name, 'country_code' => $country_code, 'areaList' => $areaList));
}

// Function to get selected area JSON data object
function json_data($country_code = '') {
  $code = "";
  $dashboard_cc = db_select('dashboard_country_code', 'dcc')
    ->fields('dcc', array('three_digit_code'))
    ->condition('country_code', $country_code, '=')
    ->execute();
  while ($obj = $dashboard_cc->fetchObject()) {

    $code = $obj->three_digit_code;
  }
  echo getSelAreaDataJSONObject($code);
}

function indicator_data() {
  $indicator_data = array();

  $indicator_data['perc_girl_age_20_24_mrd_bfr_15'] = 'of women aged 20-24 who got married before age 15';
  $indicator_data['perc_girl_age_20_24_mrd_bfr_18'] = 'of women aged 20-24 who got married before age 18';
  $indicator_data['perc_girl_age_20_24_gave_birth_bfr_18'] = 'of women aged 20-24 who gave birth before age 18';
  $indicator_data['perc_girl_age_20_24_gave_birth_bfr_15'] = 'of women aged 20-24 who gave birth before age 15';
  $indicator_data['perc_mrd_girl_age_15_19_not_using_contrcptn_mthd'] = 'of currently married/in union females aged 15-19 who are not currently using any contraceptive method';

  $indicator_data['perc_mrd_girl_age_15_19_using_contrcptn_mthd'] = 'of currently married/in union females aged 15-19 who are currently using any contraceptive method';

  $indicator_data['perc_mrd_girl_age_15_19_using_mdrn_contrcptn_mthd'] = 'of currently married/in union females aged 15-19 who are currently using any modern contraceptive method';

  $indicator_data['perc_mrd_girl_age_20_24_not_using_contrcptn_mthd'] = 'of currently married/in union females aged 20-24 who are not currently using any contraceptive method';

  $indicator_data['perc_mrd_girl_age_20_24_using_contrcptn_mthd'] = 'of currently married/in union females aged 20-24 who are currently using any contraceptive method';


  $indicator_data['perc_mrd_girl_age_20_24_using_mdrn_contrcptn_mthd'] = 'of currently married/in union females aged 20-24 who are currently using any modern contraceptive method';

  $indicator_data['perc_mrd_girl_age_15_19_hv_unmet_need_fml_pln'] = 'of currently married/in union females aged 15-19 who have an unmet need for family planning';

  $indicator_data['perc_mrd_girl_age_20_24_hv_unmet_need_fml_pln'] = 'of currently married/in union females aged 20-24 who have an unmet need for family planning';

  $indicator_data['perc_mrd_girl_age_15_19_contrcptn_dmnd_stsfd'] = 'of currently married/in union females aged 15-19 who have their contraception demand satisfied';

  $indicator_data['perc_mrd_girl_age_20_24_contrcptn_dmnd_stsfd'] = 'of currently married/in union females aged 20-24 who have their contraception demand satisfied';

  $indicator_data['perc_girl_age_15_19_take_contrcptn_desc_byself_or_with_hsbnd'] = 'of women 15-19 involved in decision making for contraceptive use';

  $indicator_data['perc_girl_age_20_24_take_contrcptn_desc_byself_or_with_hsbnd'] = 'of women 20-24 involved in decision making for contraceptive use';

  $indicator_data['perc_girl_age_15_19_take_own_hlth_desc_byself_or_with_hsbnd'] = 'of women 15-19 involved in decision making for own health care';

  $indicator_data['perc_girl_age_20_24_take_own_hlth_desc_byself_or_with_hsbnd'] = 'of women 20-24 involved in decision making for own health care';

  $indicator_data['perc_girl_age_15_19_have_knwldg_hiv_aids'] = 'of females aged 15-19 who have comprehensive Knowledge of HIV/AIDS';

  $indicator_data['perc_girl_age_20_24_have_knwldg_hiv_aids'] = 'of females aged 20-24 who have comprehensive Knowledge of HIV/AIDS';

  $indicator_data['perc_female_ever_had_all_girl_15_19'] = 'of girls aged 15-19 who ever had sex';

  $indicator_data['perc_female_sexuly_active_all_girl_15_19'] = 'of girls aged 15-19 who are sexually active';

  $indicator_data['perc_wife_think_beating_jusfd_girl_15_24'] = 'of females aged 15-24 who think that wife beating is justified under at least one condition';

  $indicator_data['perc_15_24_age_diff_btwn_female_and_partnr_girl_10_or_more'] = 'of females aged 15-24 who have a husband/cohabiting partner 10 or more years older';

  return $indicator_data;
}

function prepare_all_country_indicators_values($data) {

//  $countries_list = array();
//  foreach ($data as $three_digit_cntry_code => $dashboard_data) {
//    array_push($countries_list, $three_digit_cntry_code);
//  }



  $countries_list = array();
  $dashboard_cc = db_select('dashboard_country_code', 'dcc')
    ->fields('dcc', array('three_digit_code'))
    ->execute();
  while ($obj = $dashboard_cc->fetchObject()) {

    array_push($countries_list, $obj->three_digit_code);
  }


  $all_indicator_data = array();
  for ($i = 0; $i < count($countries_list); $i++) {
    $all_indicator_data = json_decode(getSelAreaDataJSONObject($countries_list[$i]), true);
    if (!empty($all_indicator_data)) {
      $map_data['perc_girl_age_20_24_mrd_bfr_18'][$countries_list[$i]][] = $all_indicator_data['by_adolescnt_mrg']['seriesData'][0]['data'][0];
      $map_data['perc_girl_age_20_24_mrd_bfr_15'][$countries_list[$i]][] = $all_indicator_data['by_adolescnt_mrg']['seriesData'][1]['data'][0];
      $map_data['perc_girl_age_20_24_gave_birth_bfr_18'][$countries_list[$i]][] = $all_indicator_data['by_adolescnt_prg']['seriesData'][0]['data'][0];
      $map_data['perc_girl_age_20_24_gave_birth_bfr_15'][$countries_list[$i]][] = $all_indicator_data['by_adolescnt_prg']['seriesData'][1]['data'][0];
      $map_data['perc_mrd_girl_age_15_19_not_using_contrcptn_mthd'][$countries_list[$i]][] = $all_indicator_data['by_perc_mrd_female_used_or_not_contrcptn_girl_15_19']['seriesData'][0]['data'][0];

      $map_data['perc_mrd_girl_age_15_19_using_contrcptn_mthd'][$countries_list[$i]][] = $all_indicator_data['by_perc_mrd_female_used_or_not_contrcptn_girl_15_19']['seriesData'][1]['data'][0];

      $map_data['perc_mrd_girl_age_15_19_using_mdrn_contrcptn_mthd'][$countries_list[$i]][] = $all_indicator_data['by_perc_mrd_female_used_or_not_contrcptn_girl_15_19']['seriesData'][2]['data'][0];

      $map_data['perc_mrd_girl_age_20_24_not_using_contrcptn_mthd'][$countries_list[$i]][] = $all_indicator_data['by_perc_mrd_female_used_or_not_contrcptn_girl_20_24']['seriesData'][0]['data'][0];

      $map_data['perc_mrd_girl_age_20_24_using_contrcptn_mthd'][$countries_list[$i]][] = $all_indicator_data['by_perc_mrd_female_used_or_not_contrcptn_girl_20_24']['seriesData'][1]['data'][0];

      $map_data['perc_mrd_girl_age_20_24_using_mdrn_contrcptn_mthd'][$countries_list[$i]][] = $all_indicator_data['by_perc_mrd_female_used_or_not_contrcptn_girl_20_24']['seriesData'][2]['data'][0];

      $map_data['perc_mrd_girl_age_15_19_hv_unmet_need_fml_pln'][$countries_list[$i]][] = $all_indicator_data['by_perc_female_contrcptn_dmnd_unmet_girl_15_24']['seriesData'][0]['data'][0];

      $map_data['perc_mrd_girl_age_20_24_hv_unmet_need_fml_pln'][$countries_list[$i]][] = $all_indicator_data['by_perc_female_contrcptn_dmnd_unmet_girl_15_24']['seriesData'][1]['data'][0];

      $map_data['perc_mrd_girl_age_15_19_contrcptn_dmnd_stsfd'][$countries_list[$i]][] = $all_indicator_data['by_perc_female_contrcptn_dmnd_met_girl_15_24']['seriesData'][0]['data'][0];

      $map_data['perc_mrd_girl_age_20_24_contrcptn_dmnd_stsfd'][$countries_list[$i]][] = $all_indicator_data['by_perc_female_contrcptn_dmnd_met_girl_15_24']['seriesData'][1]['data'][0];

      $map_data['perc_girl_age_15_19_take_contrcptn_desc_byself_or_with_hsbnd'][$countries_list[$i]][] = $all_indicator_data['by_perc_female_take_contrcptn_desc_byself_or_with_hsbnd_girl_15_24']['seriesData'][0]['data'][0];

      $map_data['perc_girl_age_20_24_take_contrcptn_desc_byself_or_with_hsbnd'][$countries_list[$i]][] = $all_indicator_data['by_perc_female_take_contrcptn_desc_byself_or_with_hsbnd_girl_15_24']['seriesData'][0]['data'][0];

      $map_data['perc_girl_age_15_19_take_own_hlth_desc_byself_or_with_hsbnd'][$countries_list[$i]][] = $all_indicator_data['by_perc_female_take_contrcptn_desc_byself_or_with_hsbnd_girl_15_24']['seriesData'][0]['data'][0];

      $map_data['perc_girl_age_20_24_take_own_hlth_desc_byself_or_with_hsbnd'][$countries_list[$i]][] = $all_indicator_data['by_perc_female_take_contrcptn_desc_byself_or_with_hsbnd_girl_15_24']['seriesData'][0]['data'][0];

      $map_data['perc_girl_age_15_19_have_knwldg_hiv_aids'][$countries_list[$i]][] = $all_indicator_data['by_perc_female_have_knwldg_hiv_aids_girl_15_24']['seriesData'][0]['data'][0];

      $map_data['perc_girl_age_20_24_have_knwldg_hiv_aids'][$countries_list[$i]][] = $all_indicator_data['by_perc_female_have_knwldg_hiv_aids_girl_15_24']['seriesData'][1]['data'][0];

      $map_data['perc_female_ever_had_all_girl_15_19'][$countries_list[$i]][] = $all_indicator_data['by_perc_female_sexuly_active_all_girl_15_19']['seriesData'][0]['data'][0];

      $map_data['perc_female_sexuly_active_all_girl_15_19'][$countries_list[$i]][] = $all_indicator_data['by_perc_female_sexuly_active_all_girl_15_19']['seriesData'][1]['data'][0];

      $map_data['perc_wife_think_beating_jusfd_girl_15_24'][$countries_list[$i]][] = $all_indicator_data['by_perc_wife_think_beating_jusfd_girl_15_24']['seriesData'][0]['data'][0];

      $map_data['perc_15_24_age_diff_btwn_female_and_partnr_girl_10_or_more'][$countries_list[$i]][] = $all_indicator_data['by_perc_age_diff_btwn_female_and_partnr_girl_15_24']['seriesData'][2]['data'][0];
    }
  }

  return $map_data;
}

function prepare_all_country_indicators_values_fgm($data, $country_code = '') {

//  $country_code_three_digit = "";
//  $dashboard_cc = db_select('dashboard_country_code', 'dcc')
//    ->fields('dcc', array('three_digit_code'))
//    ->condition('country_code', $country_code, '=')
//    ->execute();
//  while ($obj = $dashboard_cc->fetchObject()) {
//
//    $country_code_three_digit = $obj->three_digit_code;
//  }
//
  $countries_list = array();
  $dashboard_cc = db_select('dashboard_country_code', 'dcc')
    ->fields('dcc', array('three_digit_code'))
    ->execute();
  while ($obj = $dashboard_cc->fetchObject()) {

    array_push($countries_list, $obj->three_digit_code);
  }

//  foreach ($data as $three_digit_cntry_code => $dashboard_data) {
//    array_push($countries_list, $three_digit_cntry_code);
//  }

  $file_path_map = drupal_realpath('public://') . '/fgm/files/data_v1/d3_data/data/mapData.json';
  $mapdata_json = file_get_contents($file_path_map, true);

// This function is used to read the json contents of a file.
  $map_file_data = json_decode($mapdata_json, true);
  $fgm_data = array();
  foreach ($map_file_data as $country_data) {
    $fgm_data[$country_data['id']] = array($country_data['value']);
  }
//  echo '<pre>';
//  print_r($fgm_data);
//  echo '</pre>';



  $all_indicator_data_fgm = array();
  for ($i = 0; $i < count($countries_list); $i++) {

// Data for charts
    $file_path = drupal_realpath('public://') . '/fgm/files/data_v1/' . $countries_list[$i] . '.json';


    if (file_exists($file_path)) {
// This function is used to read the json contents of a file.
      $map_data = file_get_contents($file_path, true);
// This function is used to get proper content for json decoding.
      $json_data = str_replace("var mainObj =", "", $map_data);
      $mainObj = array();
      $mainObj = json_decode($json_data, true);
      $CO4_last_element = count($mainObj['CO4']['series'][0]['data']) - 1;
      $CO1_last_element = count($mainObj['CO1']['series']) - 1;

      $map_data_fgm['prevelance'][$countries_list[$i]][] = $fgm_data[$countries_list[$i]][0];
      $map_data_fgm['fgm_among_young_girls'][$countries_list[$i]][] = empty($mainObj['CO7']['series'][0]['data'][0]['y']) ? 0 : $mainObj['CO7']['series'][0]['data'][0]['y'];
      $map_data_fgm['age_at_fgm'][$countries_list[$i]][] = empty($mainObj['CO8']['series'][0]['data'][0]['y']) ? 0 : $mainObj['CO8']['series'][0]['data'][0]['y'];
      ;
      $map_data_fgm['projections'][$countries_list[$i]][] = empty($mainObj['CO4']['series'][0]['data'][$CO4_last_element]['y']) ? 0 : $mainObj['CO4']['series'][0]['data'][$CO4_last_element]['y'];
      $map_data_fgm['trends'][$countries_list[$i]][] = empty($mainObj['CO1']['series'][$CO1_last_element]['data'][0]['y']) ? 0 : $mainObj['CO1']['series'][$CO1_last_element]['data'][0]['y'];

//    $map_data_fgm['fgm_among_young_girls'][$countries_list[$i]][] = 1;
//    $map_data_fgm['age_at_fgm'][$countries_list[$i]][] = 5;
//    $map_data_fgm['projections'][$countries_list[$i]][] = 2;
//    $map_data_fgm['trends'][$countries_list[$i]][] = 3;
    }
  }
//  echo '<pre>';
//  print_r($map_data_fgm);
//  echo '</pre>';
  return $map_data_fgm;
}

function unfpa_global_dashboard_worldmap_indicator_data($map_data, $dashboard_name) {
  $indicator_description = array();
  $indicator_description = indicator_data();
  $country = array();
  $country_list = array();

// Fetch the two and three digit country code from database.
  $dashboard_cc = db_select('dashboard_country_code', 'dcc')
    ->fields('dcc', array('three_digit_code', 'country_code'))
    ->execute();

// Create a new array to set the two digit country code.
  $dashboard_country_code = array();

  if (!empty($dashboard_cc)) {
    while ($obj = $dashboard_cc->fetchObject()) {
      $dashboard_country_code[$obj->three_digit_code] = $obj->country_code;
    }
  }
// Replace the three digit country code with two digit country code.
  foreach ($map_data as $indicator => $data) {
    foreach ($data as $three_digit_cntry_code => $dashboard_data) {
      foreach ($dashboard_data as $dashboard_value) {
        unset($data[$three_digit_cntry_code]);
        if ((!empty($dashboard_country_code[$three_digit_cntry_code])) && (!empty($dashboard_value))) {
          $two_digit_country_code = $dashboard_country_code[$three_digit_cntry_code];
          $country_list[] = $two_digit_country_code;
          $data[$two_digit_country_code] = $dashboard_data;
          $map_color_code = unfpa_global_dashboard_get_ay_color_code();
          $country_color_code = unfpa_global_dashboard_ay_map_color($map_color_code, $dashboard_value);
          $color_code[$two_digit_country_code] = $country_color_code;


          $country[$indicator][$two_digit_country_code]['url'] = url('data/' . $dashboard_name . '/' . $two_digit_country_code);
//$country[$indicator][$two_digit_country_code]['description'] = $dashboard_value . '% ' . $indicator_description[$indicator];
          $country[$indicator][$two_digit_country_code]['description'] = $dashboard_value . '% ';
          $country[$indicator][$two_digit_country_code]['color'] = ($color_code[$two_digit_country_code] != "") ? $color_code[$two_digit_country_code] : 'default';
          $country[$indicator][$two_digit_country_code]['hover_color'] = '#BADA55';
          $country[$indicator][$two_digit_country_code]['hide'] = "no";
          $country[$indicator][$two_digit_country_code]['inactive'] = "no";
        }
      }
    }
  }

  $path = drupal_get_path('module', 'unfpa_global_dashboard');
  drupal_add_js($path . '/js/jquery.ddslick.min.js');
  drupal_add_js(drupal_get_path('theme', 'unfpa_global') . '/templates/html5worldmap/worldmap.js');
  drupal_add_js(array('mapdata' => $country, 'unfpa_global_data' => $country), 'setting');
  if ($dashboard_name == 'fgm')
    drupal_add_js($path . '/js/unfpa_global_fgm_map.js');
  else
    drupal_add_js($path . '/js/unfpa_global_ay_map.js');
}

function getSelAreaDataJSONObject($areaID) {
  $areaFolderName = drupal_realpath('public://') . '/adolscent-youth/files/config_files/data_v46/' . ($areaID);
  $jsonFilePath = $areaFolderName . "/iusdata.xml";
  $finalDtArr = array();

// If selected area agegroup file found
  if (file_exists($jsonFilePath)) {
    $jsonFileContent = file_get_contents($jsonFilePath);
    $jsonFileContent = str_replace(array("\n", "\r", "\t"), '', $jsonFileContent);
//$fileContents = trim(str_replace('"', "'", $fileContents));

    $fileXMLDtArr = simplexml_load_string($jsonFileContent, 'SimpleXMLElement', LIBXML_NOCDATA);

## start loop for each graph data ##
    foreach ($fileXMLDtArr as $key => $JSONdataVal) {
      $finalDtArr[$key] = json_decode($fileXMLDtArr->$key);
    }
  }
// End of checking for selected area agegroup file

  return json_encode($finalDtArr);
}
